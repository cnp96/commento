stages:
  - build
  - deploy

variables:
 LISTEN_PORT: 3003
 IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
 DOCKER_IMAGE_EXISTS: "DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect $IMAGE >> /dev/null"
 DOCKER_LOGIN_CMD: "echo $REGISTRY_TOKEN | docker login -u $REGISTRY_USER --password-stdin $CI_REGISTRY"

# Defaults
default:
  interruptible: true
  retry: 0
  tags: 
    - "shared-01"


build-image:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_REF_NAME =~ /v.*/i
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != ""
      when: manual
  
  script:
    - eval $DOCKER_LOGIN_CMD
    - pushImage=false;
    - if ! eval $DOCKER_IMAGE_EXISTS; then
        pushImage=false;
        
        if [[ $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /ci-test-*/i ]]; then
          pushImage=true;
        fi;
        
        if [[ $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" ]]; then
          pushImage=true;
        fi;

        docker build --cache-from $CI_REGISTRY/$IMAGE:latest -t $IMAGE .;
        if $pushImage; then
          echo -e "Pushing images...\n";
          
          docker push $IMAGE;
          docker rmi $IMAGE;
          
          docker push $CI_REGISTRY_IMAGE:latest;
          docker rmi $CI_REGISTRY_IMAGE:latest;
        fi;
      fi

deploy-in-dev:
  stage: deploy
  environment:
    name: dev
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_REF_NAME =~ /v.*/i
    - if: $CI_COMMIT_BRANCH =~ /^ci-test-*/i
      when: manual
  script:
    - bash .gitlab-deploy.sh

deploy-in-production:
  stage: deploy
  environment:
    name: production
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_REF_NAME =~ /v.*/i
      when: manual
  script:
    - bash .gitlab-deploy.sh
